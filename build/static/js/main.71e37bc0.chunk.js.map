{"version":3,"sources":["index.js","App.js","countries.js","serviceWorker.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactNativeWeb","_reactNative","_reactNativeDataTable","_modalReactNativeWeb","_countries","App","props","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","ds","ListView","DataSource","rowHasChanged","r1","r2","console","log","state","dataSource","cloneWithRows","countries","spinValue","Animated","Value","modalVisible","isVisible","setState","record","Row","Cell","code","name","Header","HeaderCell","text","_this2","interpolate","inputRange","outputRange","View","style","styles","container","Text","title","DataTable","renderRow","renderHeader","animationType","transparent","visible","onDismiss","alert","marginTop","TouchableHighlight","onPress","setModalVisible","button","underlayColor","buttonText","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","logo","width","height","fontWeight","fontSize","borderRadius","padding","marginVertical","color","config","navigator","publicUrl","URL","process","window","location","href","origin","addEventListener","swUrl","concat","isLocalhost","fetch","then","response","contentType","headers","get","status","indexOf","ready","registration","reload","registerValidSW","catch","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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","file":"static/js/main.71e37bc0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Platform,\n  TouchableHighlight,\n  Animated,\n  Alert\n} from 'react-native';\nimport { ListView } from 'realm/react-native';\nimport {\n  DataTable,\n  Row,\n  Cell,\n  Header,\n  HeaderCell,\n} from 'react-native-data-table';\nimport Modal from 'modal-react-native-web';\n\nimport countries from './countries';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const ds = new ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1 != r2\n    });\n\n    console.log(ds);\n\n    this.state = {\n      dataSource: ds.cloneWithRows(countries),\n      spinValue: new Animated.Value(0),\n      modalVisible: false,\n    };\n  }\n\n  setModalVisible(isVisible) {\n    this.setState({\n      modalVisible: isVisible,\n    });\n  }\n\n  renderRow(record) {\n    return <Row>\n      <Cell>{record.code}</Cell>\n      <Cell>{record.name}</Cell>\n    </Row>;\n  }\n\n  renderHeader() {\n    return <Header>\n      <HeaderCell text={'code'} />\n      <HeaderCell text={'name'} />\n    </Header>;\n  }\n\n  render() {\n    const spin = this.state.spinValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg']\n    });\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.container}>\n          <Text style={styles.title}>DataTable</Text>\n        </View>\n        <View style={styles.container}>\n          <DataTable\n            dataSource={this.state.dataSource}\n            renderRow={this.renderRow}\n            renderHeader={this.renderHeader}\n          />\n        </View>\n        <View>\n          <Modal\n            animationType=\"slide\"\n            transparent={false}\n            visible={this.state.modalVisible}\n            onDismiss={() => {\n              alert('Modal has been closed.');\n            }}>\n            <View style={{marginTop: 22}}>\n              <View>\n                <Text>Hello World!</Text>\n\n                <TouchableHighlight\n                  onPress={() => {\n                    this.setModalVisible(!this.state.modalVisible);\n                  }}>\n                  <Text>Hide Modal</Text>\n                </TouchableHighlight>\n              </View>\n            </View>\n          </Modal>\n          <TouchableHighlight\n            onPress={() => this.setModalVisible(true)}\n            style={styles.button}\n            underlayColor={'#0A84D0'}\n          >\n            <Text style={styles.buttonText}>Add new record</Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: 300,\n    height: 300,\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  button: {\n    borderRadius: 3,\n    padding: 20,\n    marginVertical: 10,\n    marginTop: 10,\n    backgroundColor: '#1B95E0',\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default App;\n","const countries = [\n  {name: 'Afghanistan', code: 'AF'},\n  {name: 'Åland Islands', code: 'AX'},\n  {name: 'Albania', code: 'AL'},\n  {name: 'Algeria', code: 'DZ'},\n  {name: 'American Samoa', code: 'AS'},\n  {name: 'AndorrA', code: 'AD'},\n  {name: 'Angola', code: 'AO'},\n  {name: 'Anguilla', code: 'AI'},\n  {name: 'Antarctica', code: 'AQ'},\n  {name: 'Antigua and Barbuda', code: 'AG'},\n  {name: 'Argentina', code: 'AR'},\n  {name: 'Armenia', code: 'AM'},\n  {name: 'Aruba', code: 'AW'},\n  {name: 'Australia', code: 'AU'},\n  {name: 'Austria', code: 'AT'},\n  {name: 'Azerbaijan', code: 'AZ'},\n  {name: 'Bahamas', code: 'BS'},\n  {name: 'Bahrain', code: 'BH'},\n  {name: 'Bangladesh', code: 'BD'},\n  {name: 'Barbados', code: 'BB'},\n  {name: 'Belarus', code: 'BY'},\n  {name: 'Belgium', code: 'BE'},\n  {name: 'Belize', code: 'BZ'},\n  {name: 'Benin', code: 'BJ'},\n  {name: 'Bermuda', code: 'BM'},\n  {name: 'Bhutan', code: 'BT'},\n  {name: 'Bolivia', code: 'BO'},\n  {name: 'Bosnia and Herzegovina', code: 'BA'},\n  {name: 'Botswana', code: 'BW'},\n  {name: 'Bouvet Island', code: 'BV'},\n  {name: 'Brazil', code: 'BR'},\n  {name: 'British Indian Ocean Territory', code: 'IO'},\n  {name: 'Brunei Darussalam', code: 'BN'},\n  {name: 'Bulgaria', code: 'BG'},\n  {name: 'Burkina Faso', code: 'BF'},\n  {name: 'Burundi', code: 'BI'},\n  {name: 'Cambodia', code: 'KH'},\n  {name: 'Cameroon', code: 'CM'},\n  {name: 'Canada', code: 'CA'},\n  {name: 'Cape Verde', code: 'CV'},\n  {name: 'Cayman Islands', code: 'KY'},\n  {name: 'Central African Republic', code: 'CF'},\n  {name: 'Chad', code: 'TD'},\n  {name: 'Chile', code: 'CL'},\n  {name: 'China', code: 'CN'},\n  {name: 'Christmas Island', code: 'CX'},\n  {name: 'Cocos (Keeling) Islands', code: 'CC'},\n  {name: 'Colombia', code: 'CO'},\n  {name: 'Comoros', code: 'KM'},\n  {name: 'Congo', code: 'CG'},\n  {name: 'Congo, The Democratic Republic of the', code: 'CD'},\n  {name: 'Cook Islands', code: 'CK'},\n  {name: 'Costa Rica', code: 'CR'},\n  {name: 'Cote D\\'Ivoire', code: 'CI'},\n  {name: 'Croatia', code: 'HR'},\n  {name: 'Cuba', code: 'CU'},\n  {name: 'Cyprus', code: 'CY'},\n  {name: 'Czech Republic', code: 'CZ'},\n  {name: 'Denmark', code: 'DK'},\n  {name: 'Djibouti', code: 'DJ'},\n  {name: 'Dominica', code: 'DM'},\n  {name: 'Dominican Republic', code: 'DO'},\n  {name: 'Ecuador', code: 'EC'},\n  {name: 'Egypt', code: 'EG'},\n  {name: 'El Salvador', code: 'SV'},\n  {name: 'Equatorial Guinea', code: 'GQ'},\n  {name: 'Eritrea', code: 'ER'},\n  {name: 'Estonia', code: 'EE'},\n  {name: 'Ethiopia', code: 'ET'},\n  {name: 'Falkland Islands (Malvinas)', code: 'FK'},\n  {name: 'Faroe Islands', code: 'FO'},\n  {name: 'Fiji', code: 'FJ'},\n  {name: 'Finland', code: 'FI'},\n  {name: 'France', code: 'FR'},\n  {name: 'French Guiana', code: 'GF'},\n  {name: 'French Polynesia', code: 'PF'},\n  {name: 'French Southern Territories', code: 'TF'},\n  {name: 'Gabon', code: 'GA'},\n  {name: 'Gambia', code: 'GM'},\n  {name: 'Georgia', code: 'GE'},\n  {name: 'Germany', code: 'DE'},\n  {name: 'Ghana', code: 'GH'},\n  {name: 'Gibraltar', code: 'GI'},\n  {name: 'Greece', code: 'GR'},\n  {name: 'Greenland', code: 'GL'},\n  {name: 'Grenada', code: 'GD'},\n  {name: 'Guadeloupe', code: 'GP'},\n  {name: 'Guam', code: 'GU'},\n  {name: 'Guatemala', code: 'GT'},\n  {name: 'Guernsey', code: 'GG'},\n  {name: 'Guinea', code: 'GN'},\n  {name: 'Guinea-Bissau', code: 'GW'},\n  {name: 'Guyana', code: 'GY'},\n  {name: 'Haiti', code: 'HT'},\n  {name: 'Heard Island and Mcdonald Islands', code: 'HM'},\n  {name: 'Holy See (Vatican City State)', code: 'VA'},\n  {name: 'Honduras', code: 'HN'},\n  {name: 'Hong Kong', code: 'HK'},\n  {name: 'Hungary', code: 'HU'},\n  {name: 'Iceland', code: 'IS'},\n  {name: 'India', code: 'IN'},\n  {name: 'Indonesia', code: 'ID'},\n  {name: 'Iran, Islamic Republic Of', code: 'IR'},\n  {name: 'Iraq', code: 'IQ'},\n  {name: 'Ireland', code: 'IE'},\n  {name: 'Isle of Man', code: 'IM'},\n  {name: 'Israel', code: 'IL'},\n  {name: 'Italy', code: 'IT'},\n  {name: 'Jamaica', code: 'JM'},\n  {name: 'Japan', code: 'JP'},\n  {name: 'Jersey', code: 'JE'},\n  {name: 'Jordan', code: 'JO'},\n  {name: 'Kazakhstan', code: 'KZ'},\n  {name: 'Kenya', code: 'KE'},\n  {name: 'Kiribati', code: 'KI'},\n  {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'},\n  {name: 'Korea, Republic of', code: 'KR'},\n  {name: 'Kuwait', code: 'KW'},\n  {name: 'Kyrgyzstan', code: 'KG'},\n  {name: 'Lao People\\'S Democratic Republic', code: 'LA'},\n  {name: 'Latvia', code: 'LV'},\n  {name: 'Lebanon', code: 'LB'},\n  {name: 'Lesotho', code: 'LS'},\n  {name: 'Liberia', code: 'LR'},\n  {name: 'Libyan Arab Jamahiriya', code: 'LY'},\n  {name: 'Liechtenstein', code: 'LI'},\n  {name: 'Lithuania', code: 'LT'},\n  {name: 'Luxembourg', code: 'LU'},\n  {name: 'Macao', code: 'MO'},\n  {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},\n  {name: 'Madagascar', code: 'MG'},\n  {name: 'Malawi', code: 'MW'},\n  {name: 'Malaysia', code: 'MY'},\n  {name: 'Maldives', code: 'MV'},\n  {name: 'Mali', code: 'ML'},\n  {name: 'Malta', code: 'MT'},\n  {name: 'Marshall Islands', code: 'MH'},\n  {name: 'Martinique', code: 'MQ'},\n  {name: 'Mauritania', code: 'MR'},\n  {name: 'Mauritius', code: 'MU'},\n  {name: 'Mayotte', code: 'YT'},\n  {name: 'Mexico', code: 'MX'},\n  {name: 'Micronesia, Federated States of', code: 'FM'},\n  {name: 'Moldova, Republic of', code: 'MD'},\n  {name: 'Monaco', code: 'MC'},\n  {name: 'Mongolia', code: 'MN'},\n  {name: 'Montserrat', code: 'MS'},\n  {name: 'Morocco', code: 'MA'},\n  {name: 'Mozambique', code: 'MZ'},\n  {name: 'Myanmar', code: 'MM'},\n  {name: 'Namibia', code: 'NA'},\n  {name: 'Nauru', code: 'NR'},\n  {name: 'Nepal', code: 'NP'},\n  {name: 'Netherlands', code: 'NL'},\n  {name: 'Netherlands Antilles', code: 'AN'},\n  {name: 'New Caledonia', code: 'NC'},\n  {name: 'New Zealand', code: 'NZ'},\n  {name: 'Nicaragua', code: 'NI'},\n  {name: 'Niger', code: 'NE'},\n  {name: 'Nigeria', code: 'NG'},\n  {name: 'Niue', code: 'NU'},\n  {name: 'Norfolk Island', code: 'NF'},\n  {name: 'Northern Mariana Islands', code: 'MP'},\n  {name: 'Norway', code: 'NO'},\n  {name: 'Oman', code: 'OM'},\n  {name: 'Pakistan', code: 'PK'},\n  {name: 'Palau', code: 'PW'},\n  {name: 'Palestinian Territory, Occupied', code: 'PS'},\n  {name: 'Panama', code: 'PA'},\n  {name: 'Papua New Guinea', code: 'PG'},\n  {name: 'Paraguay', code: 'PY'},\n  {name: 'Peru', code: 'PE'},\n  {name: 'Philippines', code: 'PH'},\n  {name: 'Pitcairn', code: 'PN'},\n  {name: 'Poland', code: 'PL'},\n  {name: 'Portugal', code: 'PT'},\n  {name: 'Puerto Rico', code: 'PR'},\n  {name: 'Qatar', code: 'QA'},\n  {name: 'Reunion', code: 'RE'},\n  {name: 'Romania', code: 'RO'},\n  {name: 'Russian Federation', code: 'RU'},\n  {name: 'RWANDA', code: 'RW'},\n  {name: 'Saint Helena', code: 'SH'},\n  {name: 'Saint Kitts and Nevis', code: 'KN'},\n  {name: 'Saint Lucia', code: 'LC'},\n  {name: 'Saint Pierre and Miquelon', code: 'PM'},\n  {name: 'Saint Vincent and the Grenadines', code: 'VC'},\n  {name: 'Samoa', code: 'WS'},\n  {name: 'San Marino', code: 'SM'},\n  {name: 'Sao Tome and Principe', code: 'ST'},\n  {name: 'Saudi Arabia', code: 'SA'},\n  {name: 'Senegal', code: 'SN'},\n  {name: 'Serbia and Montenegro', code: 'CS'},\n  {name: 'Seychelles', code: 'SC'},\n  {name: 'Sierra Leone', code: 'SL'},\n  {name: 'Singapore', code: 'SG'},\n  {name: 'Slovakia', code: 'SK'},\n  {name: 'Slovenia', code: 'SI'},\n  {name: 'Solomon Islands', code: 'SB'},\n  {name: 'Somalia', code: 'SO'},\n  {name: 'South Africa', code: 'ZA'},\n  {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},\n  {name: 'Spain', code: 'ES'},\n  {name: 'Sri Lanka', code: 'LK'},\n  {name: 'Sudan', code: 'SD'},\n  {name: 'Suriname', code: 'SR'},\n  {name: 'Svalbard and Jan Mayen', code: 'SJ'},\n  {name: 'Swaziland', code: 'SZ'},\n  {name: 'Sweden', code: 'SE'},\n  {name: 'Switzerland', code: 'CH'},\n  {name: 'Syrian Arab Republic', code: 'SY'},\n  {name: 'Taiwan, Province of China', code: 'TW'},\n  {name: 'Tajikistan', code: 'TJ'},\n  {name: 'Tanzania, United Republic of', code: 'TZ'},\n  {name: 'Thailand', code: 'TH'},\n  {name: 'Timor-Leste', code: 'TL'},\n  {name: 'Togo', code: 'TG'},\n  {name: 'Tokelau', code: 'TK'},\n  {name: 'Tonga', code: 'TO'},\n  {name: 'Trinidad and Tobago', code: 'TT'},\n  {name: 'Tunisia', code: 'TN'},\n  {name: 'Turkey', code: 'TR'},\n  {name: 'Turkmenistan', code: 'TM'},\n  {name: 'Turks and Caicos Islands', code: 'TC'},\n  {name: 'Tuvalu', code: 'TV'},\n  {name: 'Uganda', code: 'UG'},\n  {name: 'Ukraine', code: 'UA'},\n  {name: 'United Arab Emirates', code: 'AE'},\n  {name: 'United Kingdom', code: 'GB'},\n  {name: 'United States', code: 'US'},\n  {name: 'United States Minor Outlying Islands', code: 'UM'},\n  {name: 'Uruguay', code: 'UY'},\n  {name: 'Uzbekistan', code: 'UZ'},\n  {name: 'Vanuatu', code: 'VU'},\n  {name: 'Venezuela', code: 'VE'},\n  {name: 'Viet Nam', code: 'VN'},\n  {name: 'Virgin Islands, British', code: 'VG'},\n  {name: 'Virgin Islands, U.S.', code: 'VI'},\n  {name: 'Wallis and Futuna', code: 'WF'},\n  {name: 'Western Sahara', code: 'EH'},\n  {name: 'Yemen', code: 'YE'},\n  {name: 'Zambia', code: 'ZM'},\n  {name: 'Zimbabwe', code: 'ZW'}\n];\n\nexport default countries;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}